{"version":3,"file":"static/js/988.b99dece3.chunk.js","mappings":"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","sources":["common/components/Select/Select.tsx","common/components/card/Card.tsx","common/components/status/Status.tsx","common/components/title/TitleOptions.tsx","layout/locatoin/locationsApi.ts","layout/locatoin/TitltPageLoc/TitlePageLoc.tsx","layout/locatoin/Location.tsx","styles/ThemeUtils.ts","utils/getArrNumbersForLokAndEpis/getArrNumbersForLokAndEpis.ts"],"sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n  arrNumberEpisodes: number[];\r\n  handlerSelect: (num: number) => void;\r\n  nameOption: string;\r\n};\r\n\r\nexport const Select = ({ arrNumberEpisodes, handlerSelect , nameOption}: Props) => {\r\n\r\n  const onHandlerSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    handlerSelect(+e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <SelectElement  onChange={onHandlerSelect}>\r\n        <Option value=\"1\">Choose...</Option>\r\n        {\r\n          arrNumberEpisodes.map((e, i) => (\r\n            <Option key={i} value={e}>{nameOption}-{e}</Option>\r\n          ))\r\n        }\r\n      </SelectElement>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n    padding: 0;\r\n    display: inline-block;    \r\n    justify-content: center;\r\n`;\r\n\r\nconst SelectElement = styled.select`\r\n    padding: 10px 15px;\r\n    font-size: 16px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 4px;\r\n    background-color: #f9f9f9;\r\n    min-width: 250px;\r\n\r\n    cursor: pointer;\r\n    transition: border-color 0.3s, background-color 0.3s;\r\n`;\r\n\r\nconst Option = styled.option`\r\n  padding: 10px;\r\n  font-size: 14px;\r\n    \r\n`;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Status} from \"../status/Status\";\r\nimport {useTheme} from \"../../../app/ThemeContextProvider\";\r\nimport {getTextColor} from \"../../../styles/ThemeUtils\";\r\nimport {theme} from \"../../../styles/Theme\";\r\n\r\ntype Props = {\r\n  img: string\r\n  name: string\r\n  location: string\r\n  status: string\r\n};\r\nexport const lightThemeText = theme.lightTheme.text\r\nexport const darkThemeText = theme.darkTheme.text\r\nexport const lightThemeBackgroundColor =  theme.lightTheme.firstBg\r\nexport const darkThemeBackgroundColor =theme.darkTheme.firstBg\r\n\r\nexport const Card = (props: Props) => {\r\n  const {enterTheme} = useTheme()\r\n  return (\r\n    <StyledProjectsCard status={props.status} enterTheme={enterTheme}>\r\n      <WrapperImg>\r\n        <Image src={props.img} alt={props.name}/>\r\n        <StatusWrapper>\r\n          <Status status={props.status}/>\r\n        </StatusWrapper>\r\n      </WrapperImg>\r\n      <WrapperInfo>\r\n        <CharacterName enterTheme={enterTheme}>{props.name}</CharacterName>\r\n        <CartText enterTheme={enterTheme}>Last Location</CartText>\r\n        <CartText enterTheme={enterTheme}>{props.location}</CartText>\r\n      </WrapperInfo>\r\n    </StyledProjectsCard>\r\n  );\r\n};\r\n\r\n\r\nconst StyledProjectsCard = styled.div<{ status: string, enterTheme: string }>`\r\n    border-radius: 8px;\r\n    background-color: ${({enterTheme}) => getTextColor(enterTheme, lightThemeBackgroundColor, darkThemeBackgroundColor)};\r\n    border: 2px solid blue;\r\n    width: 220px;\r\n    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\r\n\r\n    @media ${theme.media.tablet} {\r\n        width: 300px;\r\n    }\r\n    @media ${theme.media.mobile} {\r\n        width: 300px;\r\n    }\r\n`\r\nconst CharacterName = styled.p<{ enterTheme: string }>`\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n    color: ${({enterTheme}) => getTextColor(enterTheme, lightThemeText, darkThemeText)};\r\n`\r\nconst CartText = styled.p<{ enterTheme: string }>`\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    color: ${({enterTheme}) => getTextColor(enterTheme, lightThemeText, darkThemeText)};\r\n`\r\n\r\nconst WrapperImg = styled.div`\r\n    position: relative;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nconst StatusWrapper = styled.div`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    border-radius: 6px 6px 0 0;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst WrapperInfo = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\n\r\n\r\n","// @flow\r\nimport * as React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  status?: string\r\n};\r\n\r\nexport const Status = ({status}: Props) => {\r\n  return (\r\n    <StyledStatus $status={status}>\r\n      {status}\r\n    </StyledStatus>\r\n  );\r\n};\r\n\r\nconst StyledStatus = styled.div<{ $status?: string }>`\r\n    background-color: ${(props) => {\r\n        switch (props.$status) {\r\n            case \"Alive\":\r\n                return \"green\";\r\n            case \"Dead\":\r\n                return \"red\";\r\n            default:\r\n                return \"gray\";\r\n        }\r\n    }};\r\n    color: white;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    z-index: 1;\r\n    opacity: 0.7;\r\n`","import styled from \"styled-components\";\r\nimport {theme} from \"../../../styles/Theme\";\r\nimport {getTextColor} from \"../../../styles/ThemeUtils\";\r\n\r\nexport const lightThemeText = theme.lightTheme.text\r\nexport const darkThemeText = theme.darkTheme.text\r\n\r\nexport const TitleOptions = styled.h3<{ enterTheme: string }>`\r\n    font-weight: 500;\r\n    font-size: 30px;\r\n    color: ${({enterTheme}) => getTextColor(enterTheme, lightThemeText, darkThemeText)};\r\n    margin: 0 0 10px 0;\r\n    text-align: center;\r\n}\r\n`","import {baseApi} from \"../../app/baseApi\";\r\nimport {Locations, LocationsResponse} from \"../../utils/types/types\";\r\n\r\n\r\n\r\nexport const locationsApi = baseApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getLocations: builder.query<LocationsResponse, void>({\r\n        query: () => `location`,\r\n\r\n        transformResponse: (res: LocationsResponse) => res,\r\n        providesTags: [\"RickAndMorty\"]\r\n      },\r\n    ),\r\n      getMultipleLocations:builder.query<Locations,number>({\r\n          query: (id = 1) => `location/${id}`,\r\n\r\n          transformResponse: (res: Locations) => res,\r\n          providesTags: [\"RickAndMorty\"]\r\n        },\r\n      )\r\n  })\r\n\r\n})\r\n\r\nexport const {useGetLocationsQuery, useGetMultipleLocationsQuery} = locationsApi\r\n\r\n","import styled from \"styled-components\";\r\nimport {theme} from \"../../../styles/Theme\";\r\nimport {useTheme} from \"../../../app/ThemeContextProvider\";\r\n\r\ntype Props = {\r\n  titlePage?: string\r\n  dimension?: string\r\n  typeLoc?: string\r\n};\r\n\r\nexport const TitlePageLoc = ({titlePage, typeLoc, dimension}: Props) => {\r\n  const {enterTheme} = useTheme()\r\n  return (\r\n    <StyledCharacters>\r\n      <Title enterTheme={enterTheme}>Episode name : <span>{titlePage}</span></Title>\r\n      <Span enterTheme={enterTheme}>Dimension: {dimension}</Span>\r\n      <Span enterTheme={enterTheme}>Type: {typeLoc}</Span>\r\n    </StyledCharacters>\r\n  );\r\n};\r\nconst StyledCharacters = styled.div`\r\n    margin: 30px 0 30px 0;\r\n`\r\nconst Title = styled.h3<{enterTheme: string}>`\r\n    font-weight: 500;\r\n    font-size: 40px;\r\n    color: ${props => props.enterTheme === \"light\" ? theme.lightTheme.text : theme.darkTheme.text};\r\n    margin: 0 0 20px;\r\n    \r\n    span{\r\n        color: ${theme.colors.accent};        \r\n    }\r\n\r\n    @media ${theme.media.tablet} {\r\n        font-size: 30px;\r\n        margin: 0 0 10px;\r\n    }\r\n`\r\nconst Span = styled.span<{enterTheme: string}>`\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    color: ${props => props.enterTheme === \"light\" ? theme.lightTheme.text : theme.darkTheme.text};\r\n    margin: 0 0 20px;\r\n    display: block;\r\n    text-align: center;\r\n\r\n    @media ${theme.media.tablet} {\r\n        margin: 0 0 5px;\r\n    }\r\n`","import styled from \"styled-components\";\r\nimport {Card} from \"../../common/components/card/Card\";\r\nimport {FlexWrapper} from \"../../common/components/FlexWrapper\";\r\nimport {useGetLocationsQuery, useGetMultipleLocationsQuery} from \"./locationsApi\";\r\nimport {useGetMultipleCharactersQuery} from \"../characters/charactersApi\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Select} from \"../../common/components/Select/Select\";\r\nimport {getArrNumbersForLokAndEpis} from \"../../utils/getArrNumbersForLokAndEpis/getArrNumbersForLokAndEpis\";\r\nimport {useState} from \"react\";\r\nimport {TitlePageLoc} from \"./TitltPageLoc/TitlePageLoc\";\r\nimport {TitleOptions} from \"../../common/components/title/TitleOptions\";\r\nimport {useTheme} from \"../../app/ThemeContextProvider\";\r\nimport {theme} from \"../../styles/Theme\";\r\n\r\n const Location = () => {\r\n\r\n  const {enterTheme} = useTheme()\r\n\r\n  const data = useGetLocationsQuery()\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n\r\n  const {data: multepleLoc} = useGetMultipleLocationsQuery(currentPage)\r\n\r\n\r\n  const quantityLocations = data?.data?.info.count\r\n\r\n  const arrNumberLocations = getArrNumbersForLokAndEpis(quantityLocations) || []\r\n\r\n  const idCharactersForLocations = multepleLoc?.residents.map(url => Number(url.split(\"/\").pop())) ?? []\r\n\r\n  const {data: multipleCharacters} = useGetMultipleCharactersQuery(idCharactersForLocations ?? [])\r\n\r\n  const handlerSelect = (num: number) => {\r\n    setCurrentPage(num);\r\n  }\r\n\r\n\r\n  const normalizeArr = Array.isArray(multipleCharacters) ? multipleCharacters : [multipleCharacters]\r\n\r\n  return (\r\n    <StyledCharacters>\r\n\r\n      <FlexWrapper justify={'center'}>\r\n        <TitlePageLoc titlePage={data?.data?.results[currentPage - 1].name}\r\n                      dimension={data?.data?.results[currentPage - 1].dimension}\r\n                      typeLoc={data?.data?.results[currentPage - 1].type}/>\r\n      </FlexWrapper>\r\n\r\n      <Wrapper>\r\n        {/*<FlexWrapper>*/}\r\n          <FlexWrapper direction={'column'} align={'center'}>\r\n            <TitleOptions enterTheme={enterTheme}>Pick Location</TitleOptions>\r\n            <WrapperSelect>\r\n              <Select nameOption={\"Location\"} handlerSelect={handlerSelect} arrNumberEpisodes={arrNumberLocations}/>\r\n            </WrapperSelect>\r\n          </FlexWrapper>\r\n\r\n\r\n        <FlexWrapper justify={\"space-around\"} wrap={\"wrap\"} gap={\"10px\"}>\r\n          {normalizeArr.map((character) => {\r\n            return (\r\n              <NavLink key={character?.id} to={`/location/${character?.id}`}>\r\n                <Card\r\n                  key={character?.id}\r\n                  img={character?.image || \"\"}\r\n                  name={character?.name || \"\"}\r\n                  location={character?.location?.name || \"\"}\r\n                  status={character?.status || \"\"}\r\n                />\r\n              </NavLink>)\r\n\r\n          })\r\n          }\r\n        </FlexWrapper>\r\n        {/*</FlexWrapper>*/}\r\n      </Wrapper>\r\n\r\n\r\n    </StyledCharacters>\r\n\r\n  );\r\n};\r\n\r\nconst StyledCharacters = styled.div`\r\n    margin-top: 50px;\r\n    @media ${theme.media.tablet} {\r\n        margin-top: 20px;\r\n    }\r\n`\r\n\r\nconst WrapperSelect = styled.div`\r\n    margin-right: 50px;\r\n\r\n    @media ${theme.media.tablet} {\r\n        margin: 0 0 50px 0;\r\n    }\r\n`\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    @media ${theme.media.tablet} {\r\n        flex-direction: column;\r\n    }\r\n`\r\nexport default Location","import {theme} from \"./Theme\";\r\n\r\nexport const getTextColor = (enterTheme: string, firstColor: any, secondColor: any) =>\r\n  enterTheme === \"light\" ? firstColor : secondColor;\r\n\r\n  // enterTheme === \"light\" ? theme.lightTheme.text : theme.darkTheme.text;\r\n","export const getArrNumbersForLokAndEpis = (num: number | undefined) => {\r\n  if (num !== undefined) {\r\n    let arrNumbersEpisodes = []\r\n    for (let i = 1; i <= num; i++) {\r\n      arrNumbersEpisodes.push(i)\r\n    }\r\n\r\n    return arrNumbersEpisodes;\r\n  }\r\n  return []\r\n}"],"names":["Select","_ref","arrNumberEpisodes","handlerSelect","nameOption","_jsx","Form","children","_jsxs","SelectElement","onChange","e","currentTarget","value","Option","map","i","styled","form","_templateObject","_taggedTemplateLiteral","select","_templateObject2","option","_templateObject3","lightThemeText","theme","lightTheme","text","darkThemeText","darkTheme","lightThemeBackgroundColor","firstBg","darkThemeBackgroundColor","Card","props","enterTheme","useTheme","StyledProjectsCard","status","WrapperImg","Image","src","img","alt","name","StatusWrapper","Status","WrapperInfo","CharacterName","CartText","location","div","getTextColor","media","tablet","mobile","p","_ref2","_ref3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","StyledStatus","$status","TitleOptions","h3","locationsApi","baseApi","injectEndpoints","endpoints","builder","getLocations","query","transformResponse","res","providesTags","getMultipleLocations","concat","arguments","length","undefined","useGetLocationsQuery","useGetMultipleLocationsQuery","TitlePageLoc","titlePage","typeLoc","dimension","StyledCharacters","Title","Span","colors","accent","span","WrapperSelect","Wrapper","Location","_data$data","_multepleLoc$resident","_data$data2","_data$data3","_data$data4","data","currentPage","setCurrentPage","useState","multepleLoc","quantityLocations","info","count","arrNumberLocations","getArrNumbersForLokAndEpis","idCharactersForLocations","residents","url","Number","split","pop","multipleCharacters","useGetMultipleCharactersQuery","normalizeArr","Array","isArray","FlexWrapper","justify","results","type","direction","align","num","wrap","gap","character","_character$location","NavLink","to","id","image","firstColor","secondColor","arrNumbersEpisodes","push"],"sourceRoot":""}